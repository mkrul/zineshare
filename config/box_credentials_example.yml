# Box.com API Credentials Configuration Example
#
# To configure Box.com integration with OAuth2 Client Credentials Grant:
#
# Option 1: Using Rails Credentials (Recommended)
# Run: rails credentials:edit
# Add the following to your credentials file:
#
# For App Access Only (most common):
# box:
#   client_id: your_box_client_id_here
#   client_secret: your_box_client_secret_here
#   # Do NOT include enterprise_id for App Access Only
#
# For Enterprise Access (advanced):
# box:
#   client_id: your_box_client_id_here
#   client_secret: your_box_client_secret_here
#   enterprise_id: your_enterprise_id_here
#
# Option 2: Using Environment Variables
# export BOX_CLIENT_ID=your_box_client_id_here
# export BOX_CLIENT_SECRET=your_box_client_secret_here
# export BOX_ENTERPRISE_ID=your_enterprise_id_here  # Only for Enterprise Access
#
# Getting Box.com API Credentials:
# 1. Go to https://developer.box.com/
# 2. Create a new app or use an existing one
# 3. Choose "Custom App" and "OAuth 2.0 with Client Credentials Grant (Server Authentication)"
# 4. Configure the following settings:
#    - App Access Level:
#      * "App Access Only" - App can only access files/folders it creates (RECOMMENDED)
#      * "App + Enterprise Access" - App can access all enterprise content (requires admin approval)
#    - Application Scopes: Enable "Write all files and folders" and "Read all files and folders"
# 5. Copy your Client ID and Client Secret from the Configuration tab
# 6. If using "App Access Only": You're done! Just add client_id and client_secret to credentials
# 7. If using "Enterprise Access": Also add enterprise_id and authorize your app in Box Admin Console
#
# Troubleshooting:
# - Error "box_subject_type value is unauthorized": You're using App Access Only but have enterprise_id configured
# - Solution: Remove enterprise_id from your credentials or switch to Enterprise Access in Box Developer Console
#
# Benefits of OAuth2 Client Credentials Grant:
# - Automatic token refresh (no manual token management)
# - More secure than static access tokens
# - Proper server-to-server authentication
# - Follows OAuth2 standards